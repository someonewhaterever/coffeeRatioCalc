@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
  scrollbar-gutter: stable;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not([fill=none],
[fill^=url])) {
  fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not([stroke=none],
[stroke^=url])) {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Open Sans";
  src: url("../fonts/OpenSans-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Open Sans";
  src: url("../fonts//OpenSans-SemiBold.woff2") format("woff2");
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Open Sans";
  src: url("../fonts/OpenSans-Bold.woff2") format("woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
:root {
  --color-primary: #F7F1EB;
  --color-secondary: #F3E9DC;
  --color-accent: #C6A48B;
  --color-text-primary: #4B3F3F;
  --color-text-title: #5C4033;
  --color-hover: #B98E75;
  --color-success: #DDE9D0;
  --color-error: #F7D6D0;
  --border: 0.0625rem solid var(--color-secondary);
  --shadow: 0 0 0 0.1875rem #f0e0ab;
  --font-family: "Open Sans", sans-serif;
  --container-width: 100rem;
  --container-padding-x: 1rem;
  --transition-duration: 0.2s;
  --100vw: calc(100vw - var(--scrollbar-width));
}
@media (width <= 90.06125rem) {
  :root {
    --container-width: 80rem;
  }
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (width <= 47.99875rem) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (width > 47.99875rem) {
  .visible-mobile {
    display: none !important;
  }
}

html.is-lock {
  overflow: hidden;
}

body {
  font-size: clamp(0.875rem, 0.7944214876rem + 0.3305785124vw, 1.125rem);
  display: flex;
  flex-direction: column;
  font-family: var(--font-family);
  letter-spacing: -0.03em;
  color: var(--color-text-primary);
  background-color: var(--color-primary);
}

main {
  flex-grow: 1;
}

h1, .h1,
h2, .h2,
h3, .h3,
h4, .h4,
h5, .h5,
h6, .h6 {
  color: var(--color-text-title);
}

h1, .h1 {
  font-size: clamp(1.875rem, 1.069214876rem + 3.305785124vw, 4.375rem);
  line-height: 1.2;
}

h2, .h2 {
  font-size: clamp(1.75rem, 1.145661157rem + 2.479338843vw, 3.625rem);
  line-height: 1.3;
}

h3, .h3 {
  font-size: clamp(1.5rem, 1.1776859504rem + 1.3223140496vw, 2.5rem);
}

h4, .h4 {
  font-size: clamp(1.125rem, 0.9638429752rem + 0.6611570248vw, 1.625rem);
}

h5, .h5 {
  font-size: clamp(1.125rem, 1.0041322314rem + 0.4958677686vw, 1.5rem);
}

h6, .h6 {
  font-size: clamp(1rem, 0.9194214876rem + 0.3305785124vw, 1.25rem);
}

p {
  --paragraphMarginBottom: 1.5rem;
}

a,
button,
label,
input,
textarea,
select,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  color: inherit;
}
@media (any-hover: hover) {
  a:hover {
    color: var(--color-hover);
  }
}
@media (any-hover: none) {
  a:active {
    color: var(--color-hover);
  }
}
a[class] {
  text-decoration: none;
}

:focus-visible {
  outline: 0.125rem dashed var(--color-primary);
  outline-offset: 0.25rem;
  transition-duration: 0s !important;
}

a[aria-label],
button[aria-label] {
  position: relative;
}
a[aria-label]::before,
button[aria-label]::before {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  width: 2.75rem;
  height: 2.75rem;
  content: "";
}

.logo {
  max-width: clamp(7.875rem, 6.8073347107rem + 4.3801652893vw, 11.1875rem);
}

.burger-button {
  width: 2.125rem;
  height: 2.125rem;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: 0.53125rem 0.265625rem;
  color: var(--color-light);
  background-color: transparent;
  border: none;
}
@media (any-hover: hover) {
  .burger-button:hover {
    color: var(--color-accent);
  }
}
@media (any-hover: none) {
  .burger-button:active {
    color: var(--color-accent);
  }
}
.burger-button.is-active .burger-button__line:first-child {
  rotate: 45deg;
  transform-origin: 0;
  translate: 0.25em -0.1em;
}
.burger-button.is-active .burger-button__line:nth-child(2) {
  rotate: -45deg;
}
.burger-button.is-active .burger-button__line:last-child {
  width: 0;
}
.burger-button__line {
  width: 100%;
  height: 0.125rem;
  background-color: currentColor;
  border-radius: 1rem;
  transition-duration: var(--transition-duration);
}
.burger-button__line:last-child {
  align-self: end;
  width: 55%;
}

.header__body {
  padding-block: 1.5rem;
}
@media (width <= 47.99875rem) {
  .header__body {
    padding-block: 1.25rem;
  }
}
.header__body-inner {
  display: flex;
  align-items: center;
  justify-content: space-between;
  column-gap: 1.5rem;
  padding-inline: var(--container-padding-x);
  max-width: var(--container-width);
  margin-inline: auto;
}
@media (width > 47.99875rem) {
  .header__overlay {
    display: contents;
  }
}
@media (width <= 47.99875rem) {
  .header__overlay {
    position: fixed;
    inset: 0;
    z-index: 100;
    display: flex;
    flex-direction: column;
    justify-content: center;
    row-gap: 3rem;
    padding: 1rem;
    background: var(--color-primary);
    transition-duration: var(--transition-duration);
  }
  .header__overlay:not(.is-active) {
    opacity: 0;
    visibility: hidden;
    transform: translateX(100%);
  }
}
.header__menu {
  overflow-y: auto;
}
.header__menu-list {
  display: flex;
  gap: 1.5rem;
  list-style: none;
  padding: 0;
  margin: 0;
}
@media (width <= 47.99875rem) {
  .header__menu-list {
    flex-direction: column;
    align-items: center;
  }
}
.header__menu-item {
  font-weight: 600;
}
.header__menu-item .header__menu-link {
  color: var(--color-text-primary);
  text-decoration: none;
  padding: 0.5rem 0.75rem;
  border-radius: 0.25rem;
  transition: var(--transition-duration);
}
.header__menu-item .header__menu-link:hover, .header__menu-item .header__menu-link:focus {
  background-color: var(--color-accent);
  color: var(--color-primary);
  outline: none;
}

.hero {
  padding-block: 5rem;
  color: var(--color-primary);
  text-align: center;
  font-family: var(--font-family);
}
.hero__title {
  font-weight: 700;
  font-size: 2.5rem;
  margin-bottom: 1rem;
  color: var(--color-text-title);
}
.hero__subtitle {
  font-weight: 400;
  font-size: 1.25rem;
  margin-bottom: 2rem;
  color: var(--color-text-primary);
}
.hero__actions .button {
  background-color: var(--color-primary);
  color: var(--color-accent);
  padding: 1rem 3rem;
  font-weight: 700;
  border-radius: 0.5rem;
  box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.15);
  transition: background-color var(--transition-duration), color var(--transition-duration);
}
.hero__actions .button:hover, .hero__actions .button:focus {
  background-color: var(--color-accent);
  color: var(--color-primary);
  outline: none;
}
@media (width <= 47.99875rem) {
  .hero {
    padding-block: 3rem;
  }
  .hero__title {
    font-size: 1.75rem;
  }
  .hero__subtitle {
    font-size: 1rem;
    margin-bottom: 1.5rem;
  }
  .hero__actions .button {
    padding: 0.75rem 1.5rem;
  }
}

.hero {
  padding-block: 5rem;
  color: var(--color-primary);
  text-align: center;
  font-family: var(--font-family);
  background-color: var(--color-bg-light);
}
.hero__main {
  max-width: var(--container-width);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}
.hero__body {
  max-width: 37.5rem;
  margin-inline: auto;
}
.hero__title {
  font-weight: 700;
  font-size: 2.5rem;
  margin-bottom: 1rem;
  color: var(--color-text-title);
}
.hero__subtitle {
  font-weight: 400;
  font-size: 1.25rem;
  margin-bottom: 2rem;
  color: var(--color-text-primary);
}
.hero__actions .button {
  background-color: var(--color-primary);
  color: var(--color-accent);
  padding: 1rem 3rem;
  font-weight: 700;
  border-radius: 0.5rem;
  box-shadow: 0 0.25rem 0.5rem rgba(0, 0, 0, 0.15);
  transition: background-color var(--transition-duration), color var(--transition-duration);
}
.hero__actions .button:hover, .hero__actions .button:focus {
  background-color: var(--color-accent);
  color: var(--color-primary);
  outline: none;
}
.hero .hero__button-primary {
  position: relative;
  z-index: 1;
}
@media (width <= 47.99875rem) {
  .hero {
    padding-block: 3rem;
  }
  .hero__title {
    font-size: 1.75rem;
  }
  .hero__subtitle {
    font-size: 1rem;
    margin-bottom: 1.5rem;
  }
  .hero__actions .button {
    padding: 0.75rem 1.5rem;
  }
}

.tips {
  padding-block: 3rem;
}
.tips__title {
  font-size: 2rem;
  font-weight: 700;
  margin-bottom: 1.5rem;
  text-align: center;
}
.tips__grid {
  display: grid;
  gap: 1.5rem;
  grid-template-columns: repeat(auto-fit, minmax(17.5rem, 1fr));
}

.tip-card {
  background-color: var(--color-light);
  border: var(--border);
  box-shadow: var(--shadow);
  padding: 1.5rem;
  border-radius: 0.75rem;
  transition: transform 0.2s ease;
}
.tip-card:hover {
  transform: translateY(-0.25rem);
}
.tip-card__title {
  font-size: 1.25rem;
  font-weight: 600;
  margin-bottom: 0.75rem;
}
.tip-card__text {
  font-size: 1rem;
  color: var(--color-gray-60);
}

.calculator {
  padding-block: 3rem;
}
.calculator__container {
  display: flex;
  flex-direction: column;
  gap: 2rem;
  align-items: center;
  text-align: center;
}
.calculator__title {
  font-size: 2.25rem;
  font-weight: 700;
  color: var(--color-dark);
}
.calculator__form {
  display: grid;
  gap: 1.5rem;
  width: 100%;
  max-width: 30rem;
  background-color: var(--color-light);
  padding: 2rem;
  border-radius: 0.75rem;
  box-shadow: var(--shadow);
}
.calculator__group {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}
.calculator__group label {
  font-weight: 600;
  font-size: 0.875rem;
  margin-bottom: 0.5rem;
  color: var(--color-dark-40);
}
.calculator__group input,
.calculator__group select {
  width: 100%;
  padding: 0.75rem;
  border: var(--border);
  border-radius: 0.375rem;
  background-color: var(--color-light);
  font-size: 1rem;
  color: var(--color-dark-20);
}
.calculator__group input:focus,
.calculator__group select:focus {
  outline: none;
  border-color: var(--color-accent);
}
.calculator__button {
  width: 100%;
  padding: 0.875rem;
  background: var(--color-accent);
  color: var(--color-dark);
  font-weight: 600;
  font-size: 1rem;
  border: none;
  border-radius: 0.5rem;
  cursor: pointer;
  transition: background var(--transition-duration);
}
.calculator__button:hover {
  background: var(--color-accent);
}
.calculator__result {
  margin-top: 1rem;
  font-size: 1.125rem;
  font-weight: 500;
  color: var(--color-dark);
}

.calculator__result {
  margin-top: 20px;
  padding: 15px;
  background: #f0f0f0;
  border-left: 4px solid #6f4e37;
  font-size: 1.1rem;
  opacity: 0;
  transform: translateY(10px);
  transition: all 0.3s ease;
}

.calculator__result.visible {
  opacity: 1;
  transform: translateY(0);
}

/*# sourceMappingURL=main.css.map */
